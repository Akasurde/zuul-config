---
- hosts: all:!appliance*
  tasks:
    - block:
        - include_role: name=fetch-output
      when:
        - "ansible_connection != 'kubectl'"
        - ansible_user_dir is defined
    - block:
        - include_role: name=fetch-output-openshift
      when:
        - "ansible_connection == 'kubectl'"
        - ansible_user_dir is defined
    - import_role: name=merge-output-to-logs
      when: ansible_user_dir is defined

- hosts: localhost
  roles:
    - role: add-fileserver
      fileserver: "{{ site_ansiblelogs }}"
    - role: generate-zuul-manifest
    - role: ara-report
      # This depends-on https://review.openstack.org/577675
      ara_report_run: True
      ara_report_type: database
      ara_report_path: "{{ zuul.executor.log_root }}/ara-report"
    - role: log-classify
      logclassify_model_store_url: https://ansible.softwarefactory-project.io/logs/classifiers
      logclassify_zuul_web: https://ansible.softwarefactory-project.io/zuul/api
      logclassify_model_dir: /var/lib/log-classify
      logclassify_local_dir: "{{ zuul.executor.log_root }}"

- hosts: "ansible.softwarefactory-project.io"
  gather_facts: false
  tasks:
    # Use a block because play vars doesn't take precedence on roles vars
    - block:
        - import_role: name=upload-log-classify-model
        - import_role: name=upload-logs
        - import_role: name=buildset-artifacts-location
      vars:
        zuul_log_compress: true
        zuul_log_url: "https://ansible.softwarefactory-project.io/logs"
        zuul_logserver_root: /var/www/logs

# - hosts: localhost
#   ignore_errors: yes
#   roles:
#     - role: submit-logstash-jobs
#       logstash_gearman_server: "ansible.softwarefactory-project.io"
#       logstash_gearman_server_port: 4731

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Run Zuul manifest role
      include_role:
        name: generate-zuul-manifest

    - name: Set zuul-log-path fact
      include_role:
        name: set-zuul-log-path-fact
      vars:
        zuul_log_path_shard_build: true

    - name: Run upload-logs-swift role
      no_log: true
      include_role:
        name: upload-logs-swift
      vars:
        zuul_log_partition: true
        zuul_log_container: ansible
        zuul_log_cloud_config: "{{ item }}"
        zuul_log_delete_after: 7776000
      with_random_choice:
        - "{{ rackspace_dfw_clouds_yaml }}"
        - "{{ rackspace_iad_clouds_yaml }}"
        - "{{ rackspace_ord_clouds_yaml }}"
